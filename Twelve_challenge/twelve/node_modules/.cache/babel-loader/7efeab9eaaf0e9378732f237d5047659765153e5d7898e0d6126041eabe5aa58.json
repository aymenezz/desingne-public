{"ast":null,"code":"var _jsxFileName = \"E:\\\\all_file\\\\challenge_desinginer\\\\Twelve_challenge\\\\twelve\\\\src\\\\components\\\\Right.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Right(prop) {\n  const data = 'hello form ';\n  // let get=useRef()\n  console.log(prop.res);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"div-right\",\n    style: {\n      gridColumn: prop.column,\n      gridRow: prop.rows\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mnue\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"confirm\",\n        children: \"Confirm Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n// function Button_tow({closeModle}){\n//     return(\n//         \n//     );\n// }\n// export {Button_tow}\n_c = Right;\nexport default Right;\nvar _c;\n$RefreshReg$(_c, \"Right\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Right","prop","data","console","log","res","className","style","gridColumn","column","gridRow","rows","children","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["E:/all_file/challenge_desinginer/Twelve_challenge/twelve/src/components/Right.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\n\r\nfunction Right(prop){\r\n    const data='hello form '\r\n    // let get=useRef()\r\n    console.log(prop.res)\r\n   \r\n    return(\r\n        <div  className=\"div-right\"  style={{gridColumn:prop.column,gridRow:prop.rows}}>\r\n            <div className=\"cart\">\r\n                <h1>{data}</h1>\r\n                <div  className=\"mnue\">\r\n                    <ul>\r\n                    \r\n                    </ul>\r\n                   \r\n                </div>\r\n                \r\n                <button type=\"button\" className=\"confirm\" >Confirm Order</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n// function Button_tow({closeModle}){\r\n//     return(\r\n//         \r\n//     );\r\n// }\r\n// export {Button_tow}\r\nexport default Right;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,KAAKA,CAACC,IAAI,EAAC;EAChB,MAAMC,IAAI,GAAC,aAAa;EACxB;EACAC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,GAAG,CAAC;EAErB,oBACIN,OAAA;IAAMO,SAAS,EAAC,WAAW;IAAEC,KAAK,EAAE;MAACC,UAAU,EAACP,IAAI,CAACQ,MAAM;MAACC,OAAO,EAACT,IAAI,CAACU;IAAI,CAAE;IAAAC,QAAA,eAC3Eb,OAAA;MAAKO,SAAS,EAAC,MAAM;MAAAM,QAAA,gBACjBb,OAAA;QAAAa,QAAA,EAAKV;MAAI;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACfjB,OAAA;QAAMO,SAAS,EAAC,MAAM;QAAAM,QAAA,eAClBb,OAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEJ,CAAC,eAENjB,OAAA;QAAQkB,IAAI,EAAC,QAAQ;QAACX,SAAS,EAAC,SAAS;QAAAM,QAAA,EAAE;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AAAAE,EAAA,GA1BSlB,KAAK;AA2Bd,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}